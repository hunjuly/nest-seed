# https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
name: Test and Coverage

on:
    # main 브렌치를 대상으로 하는 pull request가 create/update하면 실행된다
    pull_request:
        branches: ['main']
    # merge pull request하면 실행된다
    push:
        branches: ['main']

jobs:
    test-coverage:
        runs-on: ubuntu-latest
        container: node:lts-bullseye
        env:
            NODE_ENV: development
            WORKSPACE_ROOT: ${{ github.workspace }}
            PROJECT_NAME: ${{ github.event.repository.name }} # 프로젝트 이름 환경 변수 추가
        steps:
            - name: Update Packages
              run: apt-get update

            # - name: Install Docker
            #   run: apt-get install -y docker.io

            - name: Install Tools
              run: apt-get install -y jq bash postgresql curl bash bash-completion

            - name: Install Docker
              run: |
                  apt-get update
                  apt-get install -y ca-certificates curl gnupg
                  install -m 0755 -d /etc/apt/keyrings
                  curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
                  chmod a+r /etc/apt/keyrings/docker.gpg
                  echo \
                    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
                    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
                    tee /etc/apt/sources.list.d/docker.list > /dev/null
                  apt-get update
                  apt-get install -y docker-ce-cli

            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '20'

            # - name: Initialize Workflow Environment
            #   run: bash scripts/init_github_workflow.sh
            - name: Create Docker Network
              run: |
                docker network create ${PROJECT_NAME}
                docker network connect ${PROJECT_NAME} $(docker ps --filter "ancestor=node:lts-bullseye" --format "{{.ID}}")
            - name: Verify Docker Network
              run: docker network ls

            - name: Verify Docker ps
              run: docker ps -a

            - name: Initialize Workflow Environment
              run: bash scripts/init_dev_env.sh

            - name: Run Tests and Coverage
              run: npm run test:all
