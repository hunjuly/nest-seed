# https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
name: Test and Coverage

on:
    # main 브렌치를 대상으로 하는 pull request가 create/update하면 실행된다
    pull_request:
        branches: ['main']
    # merge pull request하면 실행된다
    push:
        branches: ['main']

jobs:
    test-coverage:
        runs-on: ubuntu-latest

        container: node:lts-bullseye

        # services:
        #     nest-postgres:
        #         image: postgres:15-alpine3.18
        #         # 아래처럼 volumes은 설정할 수 없다. workflow는 git clone을 하기전에 서비스를 먼저 실행한다.
        #         # 그래서 /scripts가 존재하지 않는 상태에서 맵핑하게 된다.
        #         # volumes:
        #         # - ${{ github.workspace }}/scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
        #         env:
        #             POSTGRES_PASSWORD: postgres_password
        #     nest-redis:
        #         image: redis:7.0-alpine

        #     nest-mongo:
        #         image: mongo:7
        #         env:
        #             MONGO_INITDB_ROOT_USERNAME: mongouser
        #             MONGO_INITDB_ROOT_PASSWORD: mongo_password

        env:
            NODE_ENV: development
            WORKSPACE_ROOT: ${{ github.workspace }}

        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18'

            - name: Update Packages
              run: apt-get update

            - name: Install Tools
              run: apt-get install -y jq bash postgresql

            # - name: Initialize Workflow Environment
            #   run: bash scripts/init_github_workflow.sh
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Initialize Workflow Environment
              run: bash scripts/init_dev_env.sh

            - name: Run Tests and Coverage
              run: npm run test:all
