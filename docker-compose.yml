# https://docs.docker.com/compose/compose-file/05-services/
version: '3'
services:
    postgres:
        image: postgres:15-alpine3.18
        profiles: ['infra']
        container_name: ${POSTGRES_DB_HOST}
        environment:
            POSTGRES_USER: ${POSTGRES_DB_USERNAME}
            POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB_DATABASE}
        networks:
            - default

    redis:
        image: redis:7.0-alpine
        profiles: ['infra']
        container_name: ${REDIS_HOST}
        networks:
            - default

    mongo:
        image: mongo:7
        profiles: ['infra']
        container_name: ${MONGO_DB_HOST}
        networks:
            - default
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}

    mongo-express:
        image: mongo-express:1-20-alpine3.18
        profiles: ['infra']
        container_name: ${MONGO_DB_HOST}-express
        networks:
            - default
        environment:
            ME_CONFIG_BASICAUTH_USERNAME: user
            ME_CONFIG_BASICAUTH_PASSWORD: password
            ME_CONFIG_MONGODB_ENABLE_ADMIN: true
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_DB_USERNAME}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_DB_PASSWORD}
            ME_CONFIG_MONGODB_SERVER: ${MONGO_DB_HOST}
            ME_CONFIG_MONGODB_PORT: ${MONGO_DB_PORT}

    service:
        image: $PROJECT_NAME
        build: .
        profiles: ['service']
        container_name: $PROJECT_NAME
        environment:
            - NODE_ENV=production
        env_file: .env.development
        volumes:
            - ./logs:/app/logs
        logging:
            options:
                max-size: '10m'
                max-file: '3'
        networks:
            - default

networks:
    default:
        external: true
        name: ${PROJECT_NAME}
